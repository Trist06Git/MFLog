yacc -d parse.yacc
parse.yacc: warning: 5 shift/reduce conflicts [-Wconflicts-sr]
parse.yacc: warning: 1 reduce/reduce conflict [-Wconflicts-rr]
lex tokens.lex
gcc -Wreturn-type -c y.tab.c lex.yy.c internal_struct.c generic_vector.c generic_map.c utils.c explication.c unify.c debug_stuff.c
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from parse.yacc:5:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from parse.yacc:5:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from parse.yacc:5:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
parse.yacc: In function ‘yyparse’:
parse.yacc:93:15: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
   93 |     push_back(global_defs, &$1);
      |               ^~~~~~~~~~~
      |               |
      |               vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
parse.yacc:100:15: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  100 |     push_back(func_defs, &f);
      |               ^~~~~~~~~
      |               |
      |               vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
parse.yacc:241:17: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  241 |     push_back(op.params, &$1);
      |               ~~^~~~~~~
      |                 |
      |                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
parse.yacc:242:17: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  242 |     push_back(op.params, &$3);
      |               ~~^~~~~~~
      |                 |
      |                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from parse.yacc:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
In file included from internal_struct.h:7,
                 from tokens.lex:3:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from tokens.lex:3:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from tokens.lex:3:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from tokens.lex:3:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from tokens.lex:3:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from tokens.lex:3:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from internal_struct.c:7:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from internal_struct.c:7:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from internal_struct.c:7:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
internal_struct.c: In function ‘append_exprs_and’:
internal_struct.c:21:25: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   21 |     memcpy(this.lhs, at(exprs, 0), sizeof(expr));
      |                         ^~~~~
      |                         |
      |                         vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
internal_struct.c:22:15: warning: passing argument 1 of ‘remove_at’ from incompatible pointer type [-Wincompatible-pointer-types]
   22 |     remove_at(exprs, 0);
      |               ^~~~~
      |               |
      |               vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:43:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   43 | bool remove_at(mf_array*, int i);
      |                ^~~~~~~~~
internal_struct.c:24:29: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   24 |         memcpy(this.rhs, at(exprs, 0), sizeof(expr));
      |                             ^~~~~
      |                             |
      |                             vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
internal_struct.c: In function ‘append_exprs_and_init_e’:
internal_struct.c:40:23: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   40 |         expr* ex = at(exprs, 0);
      |                       ^~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
internal_struct.c: In function ‘duplicate_params_e’:
internal_struct.c:254:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  254 |         expr new_e = copy_expr(at(params, i));
      |                                   ^~~~~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
internal_struct.c:255:19: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  255 |         push_back(ret, &new_e);
      |                   ^~~
      |                   |
      |                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
internal_struct.c: In function ‘duplicate_params_a’:
internal_struct.c:264:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  264 |         atom new_a = copy_atom(at(params, i));
      |                                   ^~~~~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
internal_struct.c:265:19: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  265 |         push_back(ret, &new_a);
      |                   ^~~
      |                   |
      |                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
internal_struct.c: In function ‘free_params_a’:
internal_struct.c:335:22: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  335 |         free_atom(at(params, i));
      |                      ^~~~~~
      |                      |
      |                      vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
internal_struct.c: In function ‘free_params_e’:
internal_struct.c:343:22: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  343 |         free_expr(at(params, i));
      |                      ^~~~~~
      |                      |
      |                      vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from internal_struct.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from utils.h:4,
                 from utils.c:6:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from utils.h:4,
                 from utils.c:6:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from utils.h:4,
                 from utils.c:6:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
utils.c: In function ‘get_cpoint’:
utils.c:13:31: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   13 |         choice_point* cp = at(cps, i);
      |                               ^~~
      |                               |
      |                               vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c:15:33: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   15 |         function* this_f = at(cp->functions, 0);
      |                               ~~^~~~~~~~~~~
      |                                 |
      |                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘get_cpoint_na’:
utils.c:26:31: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   26 |         choice_point* cp = at(cps, i);
      |                               ^~~
      |                               |
      |                               vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c:27:32: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   27 |         function* first = at(cp->functions, 0);
      |                              ~~^~~~~~~~~~~
      |                                |
      |                                vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘func_point_exists’:
utils.c:37:32: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   37 |         if (func_def_exists(at(cps, i), f)) {
      |                                ^~~
      |                                |
      |                                vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘func_def_exists’:
utils.c:47:31: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   47 |         function* this_f = at(defs, i);
      |                               ^~~~
      |                               |
      |                               vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘func_arity_exists’:
utils.c:59:28: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   59 |         function* def = at(defs, i);
      |                            ^~~~
      |                            |
      |                            vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘compare_func_heads’:
utils.c:74:34: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   74 |         if(!compare_atoms_a(at(f1->params, i), at(f2->params, i))) {
      |                                ~~^~~~~~~~
      |                                  |
      |                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c:74:53: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   74 |         if(!compare_atoms_a(at(f1->params, i), at(f2->params, i))) {
      |                                                   ~~^~~~~~~~
      |                                                     |
      |                                                     vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘compare_func_vals’:
utils.c:108:24: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  108 |         if (!same(at(f1->params, i), at(f2->params, i))) {
      |                      ~~^~~~~~~~
      |                        |
      |                        vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c:108:43: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  108 |         if (!same(at(f1->params, i), at(f2->params, i))) {
      |                                         ~~^~~~~~~~
      |                                           |
      |                                           vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘get_fdef’:
utils.c:117:26: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  117 |         function* f = at(defs, i);
      |                          ^~~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘get_fdef_defined’:
utils.c:127:26: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  127 |         function* f = at(defs, i);
      |                          ^~~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
utils.c: In function ‘get_fdef_arity’:
utils.c:137:26: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  137 |         function* f = at(defs, i);
      |                          ^~~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from utils.h:4,
                 from utils.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from explication.h:4,
                 from explication.c:7:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from explication.h:4,
                 from explication.c:7:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from explication.h:4,
                 from explication.c:7:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
explication.c: In function ‘explic_func’:
explication.c:20:21: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
   20 |         push_back(cp->functions, f);
      |                   ~~^~~~~~~~~~~
      |                     |
      |                     vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c:21:19: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
   21 |         push_back(func_defs_cp, cp);
      |                   ^~~~~~~~~~~~
      |                   |
      |                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c:26:21: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
   26 |         push_back(cp->functions, f);
      |                   ~~^~~~~~~~~~~
      |                     |
      |                     vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c: In function ‘explic_func_expr’:
explication.c:37:23: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   37 |         expr* fc = at(moved_fcalls, i);
      |                       ^~~~~~~~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c: In function ‘rec_explic_func_equ’:
explication.c:84:19: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
   84 |         push_back(fc_to_move, e);
      |                   ^~~~~~~~~~
      |                   |
      |                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c: In function ‘dump_vector_str’:
explication.c:101:24: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  101 |         char** el = at(vec, i);
      |                        ^~~
      |                        |
      |                        vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c: In function ‘tuplise_params’:
explication.c:110:23: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  110 |         expr* pr = at(params, i);
      |                       ^~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c: In function ‘explic_func_params’:
explication.c:130:24: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  130 |         expr* e = at(fc->params, i);
      |                      ~~^~~~~~~~
      |                        |
      |                        vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c:147:45: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  147 |                 insert_at(fc->params, i, at(newly_generated, j)); i++;
      |                                             ^~~~~~~~~~~~~~~
      |                                             |
      |                                             vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c:152:44: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  152 |                 expr* pparam = at(param.e.f.params, j);
      |                                   ~~~~~~~~~^~~~~~~
      |                                            |
      |                                            vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c:154:38: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  154 |                     char** sing = at(singletons, k);
      |                                      ^~~~~~~~~~
      |                                      |
      |                                      vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c:167:23: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  167 |             push_back(fc_to_move, &param);
      |                       ^~~~~~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c:168:25: warning: passing argument 1 of ‘remove_at’ from incompatible pointer type [-Wincompatible-pointer-types]
  168 |             remove_at(fc->params, i); i--;
      |                       ~~^~~~~~~~
      |                         |
      |                         vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:43:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   43 | bool remove_at(mf_array*, int i);
      |                ^~~~~~~~~
explication.c: In function ‘explic_callsite’:
explication.c:185:21: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  185 |         push_back(fc->params, &new_name);
      |                   ~~^~~~~~~~
      |                     |
      |                     vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c:187:23: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  187 |             push_back(newly_generated, &new_name);
      |                       ^~~~~~~~~~~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c: In function ‘explic_func_head’:
explication.c:195:23: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  195 |         char** s = at(f_singles, i);
      |                       ^~~~~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c:199:20: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  199 |         push_back(f->params, &a_new_param);
      |                   ~^~~~~~~~
      |                    |
      |                    vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c: In function ‘free_var_singles’:
explication.c:209:26: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  209 |         char** sing = at(vec, i);
      |                          ^~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c: In function ‘get_var_singles’:
explication.c:226:23: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  226 |             push_back(singletons, (char**)kv->fst);//check this.
      |                       ^~~~~~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
explication.c: In function ‘rec_get_var_singles’:
explication.c:251:28: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  251 |             expr* psi = at(ps, i);
      |                            ^~
      |                            |
      |                            vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
explication.c: In function ‘check_var_singles_params’:
explication.c:264:23: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  264 |         atom* pr = at(params, i);
      |                       ^~~~~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from explication.h:4,
                 from explication.c:7:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from unify.h:4,
                 from unify.c:5:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from unify.h:4,
                 from unify.c:5:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from unify.h:4,
                 from unify.c:5:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
unify.c: In function ‘entry’:
unify.c:18:34: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   18 |     function* main_f = at(main_cp->functions, 0);
      |                           ~~~~~~~^~~~~~~~~~~
      |                                  |
      |                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:28:26: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   28 |             expr* r = at(res, i);
      |                          ^~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c: In function ‘call’:
unify.c:54:33: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   54 |     function* first_cp = at(f_cp->functions, 0);
      |                             ~~~~^~~~~~~~~~~
      |                                 |
      |                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:65:42: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   65 |             substitution* s = at(next_frm->G, g2);
      |                                  ~~~~~~~~^~~
      |                                          |
      |                                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:71:35: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
   71 |                 push_back(prev_frm->G, &ret_s);
      |                           ~~~~~~~~^~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c: In function ‘unify’:
unify.c:90:33: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   90 |         frame_call* frc = at(frm->next_calls, i);
      |                              ~~~^~~~~~~~~~~~
      |                                 |
      |                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:97:33: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   97 |         swap_substitution(at(frm->G, g));
      |                              ~~~^~~
      |                                 |
      |                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c: In function ‘init_frame’:
unify.c:135:36: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  135 |         atom param = copy_atom(at(f->params, p));
      |                                   ~^~~~~~~~
      |                                    |
      |                                    vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:141:22: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  141 |         push_back(frm->G, &call_binds);
      |                   ~~~^~~
      |                      |
      |                      vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c: In function ‘free_frame’:
unify.c:155:24: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  155 |         free_equ(at(frm->G, g));
      |                     ~~~^~~
      |                        |
      |                        vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:159:32: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  159 |         frame_call* fc = at(frm->next_calls, i);
      |                             ~~~^~~~~~~~~~~~
      |                                |
      |                                vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c: In function ‘rec_add_expr’:
unify.c:170:22: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  170 |         push_back(frm->G, &s);
      |                   ~~~^~~
      |                      |
      |                      vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:184:34: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  184 |            *s.rhs = copy_expr(at(params, i));
      |                                  ^~~~~~
      |                                  |
      |                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:185:26: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  185 |             push_back(frm->G, &s);
      |                       ~~~^~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:190:22: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  190 |         push_back(frm->next_calls, &f);
      |                   ~~~^~~~~~~~~~~~
      |                      |
      |                      vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c: In function ‘decompose’:
unify.c:201:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  201 |         substitution* sub = at(frm->G, g);
      |                                ~~~^~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:210:30: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  210 |                 push_back(frm->G, &first);
      |                           ~~~^~~
      |                              |
      |                              vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:218:33: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  218 |                    push_back(frm->G, &pair);
      |                              ~~~^~~
      |                                 |
      |                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:227:30: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  227 |                 push_back(frm->G, &last);
      |                           ~~~^~~
      |                              |
      |                              vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:229:30: warning: passing argument 1 of ‘remove_at’ from incompatible pointer type [-Wincompatible-pointer-types]
  229 |                 remove_at(frm->G, g); g--;
      |                           ~~~^~~
      |                              |
      |                              vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:43:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   43 | bool remove_at(mf_array*, int i);
      |                ^~~~~~~~~
unify.c: In function ‘delete_g’:
unify.c:247:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  247 |         substitution* sub = at(frm->G, g);
      |                                ~~~^~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:250:26: warning: passing argument 1 of ‘remove_at’ from incompatible pointer type [-Wincompatible-pointer-types]
  250 |             remove_at(frm->G, g); g--;
      |                       ~~~^~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:43:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   43 | bool remove_at(mf_array*, int i);
      |                ^~~~~~~~~
unify.c: In function ‘old_decompose’:
unify.c:257:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  257 |         substitution* sub = at(frm->G, g);
      |                                ~~~^~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:263:50: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  263 |                 *new_sub.lhs = copy_expr(at(lhs_f->params, i));
      |                                             ~~~~~^~~~~~~~
      |                                                  |
      |                                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:264:50: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  264 |                 *new_sub.rhs = copy_expr(at(rhs_f->params, i));
      |                                             ~~~~~^~~~~~~~
      |                                                  |
      |                                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:265:30: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  265 |                 push_back(frm->G, &new_sub);
      |                           ~~~^~~
      |                              |
      |                              vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:267:26: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  267 |             push_back(frm->next_calls, rhs_f);
      |                       ~~~^~~~~~~~~~~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c:268:26: warning: passing argument 1 of ‘remove_at’ from incompatible pointer type [-Wincompatible-pointer-types]
  268 |             remove_at(frm->G, g); g--;
      |                       ~~~^~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:43:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   43 | bool remove_at(mf_array*, int i);
      |                ^~~~~~~~~
unify.c: In function ‘conflict’:
unify.c:275:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  275 |         substitution* sub = at(frm->G, g);
      |                                ~~~^~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c: In function ‘eliminate’:
unify.c:294:35: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  294 |         substitution* sub = at(frm->G, g);
      |                                ~~~^~~
      |                                   |
      |                                   vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:301:46: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  301 |                 substitution* g2_sub = at(frm->G, g2);
      |                                           ~~~^~~
      |                                              |
      |                                              vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c: In function ‘head_results’:
unify.c:346:25: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  346 |         atom* atm = at(f->params, i);
      |                        ~^~~~~~~~
      |                         |
      |                         vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:349:34: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  349 |             equality* eq = at(frm->G, g);
      |                               ~~~^~~
      |                                  |
      |                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:354:27: warning: passing argument 1 of ‘push_back’ from incompatible pointer type [-Wincompatible-pointer-types]
  354 |                 push_back(res, &r);
      |                           ^~~
      |                           |
      |                           vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:37:16: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   37 | bool push_back(mf_array*, void* element);
      |                ^~~~~~~~~
unify.c: In function ‘rec_instantiate_e’:
unify.c:400:41: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  400 |             rec_instantiate_e(at(in->e.f.params, i), vr, vl);
      |                                  ~~~~~~~^~~~~~~
      |                                         |
      |                                         vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c: In function ‘dump_frame’:
unify.c:409:33: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  409 |         substitution* s = at(frm->G, g);
      |                              ~~~^~~
      |                                 |
      |                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
unify.c:414:26: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  414 |         fcall* f = at(frm->next_calls, i);
      |                       ~~~^~~~~~~~~~~~
      |                          |
      |                          vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from unify.h:4,
                 from unify.c:5:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:37:6: error: conflicting types for ‘push_back’
   37 | bool push_back(mf_array*, void* element);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
generic_vector.h:14:6: note: previous declaration of ‘push_back’ was here
   14 | void push_back(vector*, void*);
      |      ^~~~~~~~~
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: error: conflicting types for ‘at’
   42 | void* at(mf_array*, int i);
      |       ^~
In file included from internal_struct.h:6,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
generic_vector.h:15:7: note: previous declaration of ‘at’ was here
   15 | void* at(vector*, int);
      |       ^~
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:43:6: error: conflicting types for ‘remove_at’
   43 | bool remove_at(mf_array*, int i);
      |      ^~~~~~~~~
In file included from internal_struct.h:6,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
generic_vector.h:16:5: note: previous declaration of ‘remove_at’ was here
   16 | int remove_at(vector*, int);
      |     ^~~~~~~~~
debug_stuff.c: In function ‘dump_func’:
debug_stuff.c:17:49: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   17 |         printf("%s", atom_to_string(*(atom*)at(f.params, i)));
      |                                                ~^~~~~~~
      |                                                 |
      |                                                 vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
debug_stuff.c: In function ‘dump_cp’:
debug_stuff.c:33:28: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   33 |         function* f = at(fs->functions, i);
      |                          ~~^~~~~~~~~~~
      |                            |
      |                            vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
debug_stuff.c: In function ‘dump_func_call’:
debug_stuff.c:83:34: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
   83 |         dump_expr(*(expr*)at(func.params, i), false);
      |                              ~~~~^~~~~~~
      |                                  |
      |                                  vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
debug_stuff.c: In function ‘expr_to_string’:
debug_stuff.c:112:40: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  112 |                 expr p_i = *(expr*)at(f.params, i);
      |                                       ~^~~~~~~
      |                                        |
      |                                        vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
debug_stuff.c:126:40: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  126 |                 expr p_i = *(expr*)at(f.params, i);
      |                                       ~^~~~~~~
      |                                        |
      |                                        vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
debug_stuff.c:128:75: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  128 |                     sprintf(res, "%s%s", res, atom_to_string((*(expr*)at(f.params, i)).e.a));
      |                                                                          ~^~~~~~~
      |                                                                           |
      |                                                                           vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
debug_stuff.c: In function ‘dump_expr_vec’:
debug_stuff.c:171:23: warning: passing argument 1 of ‘at’ from incompatible pointer type [-Wincompatible-pointer-types]
  171 |         expr* ex = at(vec, i);
      |                       ^~~
      |                       |
      |                       vector * {aka struct vector *}
In file included from internal_struct.h:7,
                 from debug_stuff.h:4,
                 from debug_stuff.c:6:
mlog_array.h:42:7: note: expected ‘mf_array *’ {aka ‘struct <anonymous> *’} but argument is of type ‘vector *’ {aka ‘struct vector *’}
   42 | void* at(mf_array*, int i);
      |       ^~
make: *** [Makefile:27: objs] Error 1
