
//main(r) =
//  r = tuple2(1,2).
//
//tuple2(x,y, r1,r2) =
//  r1 = x,
//  r2 = y.

//main(r) =
//  r = [1;2] = [x;y],
//  r = [x;y],
//  x = 1,
//  y = 2.

//main(r) =
//  x = [1;2],
//  r = f(x).
//
//f(x, return) =
//  return = x = [1;2].

//called var names from main are
//leaking into f's scope via the list
//Next todo. :done, i think..
//main(r) =
//  r = f([x;y]),
//  x = 1, y = 2,
//  printnl(x).
//
//f(a, return) =
//  a = [1;2],
//  return = a.

//main(r) =
//  r = f(1).
//
//f(a, return) =
//  a = 1,
//  return = a.

//error for uninstantiated vars in list
//main(r1) =
//  r2 = f(r1),
//  g(r2).
//
//f(x, return) =
//  return = [x].
//
//g(y) =
//  y = [1].

//matching fcall with returned list vars
//main(r) =
//  f([r;2]),
//  f([r;2]).
//
//f(lst_f) =
//  g(lst_f).
//
//g(lst_g) =
//  lst_g = [1;2].

//maybe bug, Fixed!
//main(r) =
//  f(r),
//  f(r).
//
//f(a) =
//  g(a).
//
//g(b) =
//  b = 1.

//a more complicated vars in lists
//main(r) =
//  x = 3,
//  f([r;2;x], 2).
//
//f(lst, mid) =
//  lst = [1;mid;3].

//empty list
//main(r) =
//  r = [].

//list of list
//main(r) =
//  r = tuplise_list([[1;2];[3;4]]).
//
//tuplise_list(lst, t1, t2) =
//  lst = [t1; t2].

//main(r) = //fails
//  r = tuplise_list([1]).

//fdef pattern match
//main(r) =
//  all is_good([r;2], r).
//
//is_good([1;2]) = //no facts. yet..
//  return = 1.
//is_good([3;4], r) =
//  r = 1.

//main(r) =
//  r = 1,
//  f(1).
//f(r) =
//  r = 1.

//main(r) =
//  one integer(r),
//  first integer(0),
//  one integer(778864).

//main(r) =
//  [r;2] = [1;2].

//main(r) =
//  [1;2] = x,
//  r = 1.

//main(r) =
//  x = [1;2],
//  x = [r;2].

//seems fine, no var leak/clash
//main(r) =
//  x = [a;b],
//  r = f(x),
//  a = 2,
//  b = 1.
//
////come back here latter to investigate  a = a.
//f(l) =
//  a = 1, a = a,
//  b = 2, b = b,
//  return = 3.

//lst = [1;2].
//
//main() =
//  r = f(lst).
//
//f([1;2]) = 1.

//main() =
//  r = match_2([2;2;3], 2).
//
//match_2(lst, x) =
//  lst = [x; x; _],
//  return = 1.

//main() =
//  [1;2] = [3;4],
//  r = 1.

//main() = 
//  [1;2] = [1;2],
//  r = 1.

//main() =
//  [r; 2] = [1; 2].

//main(r) =
//  r = [1],
//  r = [1].

//main() =
//  [return; _] = switch_l2([1;2]).

main() =
  [return; _; _] = switch_l2([1;2;3]).

switch_l2([a;b]  , [b;a]  ).
switch_l2([a;b;_], [b;a;_]).

//switch_l2([a;b]) =
//  return = [b;a].

//main() =
//  r = lst_match([1;2]).
//
//lst_match([_]) = 1.
//lst_match([_;2]) = 2.
